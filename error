["'duration'", "'protocol_type'", "'service'", "'flag'", "'src_bytes'", "'dst_bytes'", "'land'", "'wrong_fragment'", "'urgent'", "'hot'", "'num_failed_logins'", "'logged_in'", "'num_compromised'", "'root_shell'", "'su_attempted'", "'num_root'", "'num_file_creations'", "'num_shells'", "'num_access_files'", "'num_outbound_cmds'", "'is_host_login'", "'is_guest_login'", "'count'", "'srv_count'", "'serror_rate'", "'srv_serror_rate'", "'rerror_rate'", "'srv_rerror_rate'", "'same_srv_rate'", "'diff_srv_rate'", "'srv_diff_host_rate'", "'dst_host_count'", "'dst_host_srv_count'", "'dst_host_same_srv_rate'", "'dst_host_diff_srv_rate'", "'dst_host_same_src_port_rate'", "'dst_host_srv_diff_host_rate'", "'dst_host_serror_rate'", "'dst_host_srv_serror_rate'", "'dst_host_rerror_rate'", "'dst_host_srv_rerror_rate'", "'label'"]
{'duration':'0','protocol_type':'tcp','service':'http','flag':'SF','src_bytes':'181','dst_bytes':'5450','land':'0','wrong_fragment':'0','urgent':'0','hot':'0','num_failed_logins':'0','logged_in':'1','num_compromised':'0','root_shell':'0','su_attempted':'0','num_root':'0','num_file_creations':'0','num_shells':'0','num_access_files':'0','num_outbound_cmds':'0','is_host_login':'0','is_guest_login':'0','count':'8','srv_count':'8','serror_rate':'0.00','srv_serror_rate':'0.00','rerror_rate':'0.00','srv_rerror_rate':'0.00','same_srv_rate':'1.00','diff_srv_rate':'0.00','srv_diff_host_rate':'0.00','dst_host_count':'9','dst_host_srv_count':'9','dst_host_same_srv_rate':'1.00','dst_host_diff_srv_rate':'0.00','dst_host_same_src_port_rate':'0.11','dst_host_srv_diff_host_rate':'0.00','dst_host_serror_rate':'0.00','dst_host_srv_serror_rate':'0.00','dst_host_rerror_rate':'0.00','dst_host_srv_rerror_rate':'0.00','label':'normal.}
Traceback (most recent call last):
  File "convert.py", line 30, in <module>
    avroProducer.produce(topic=topic, value=item, key="string")
  File "/usr/local/lib/python3.5/site-packages/confluent_kafka/avro/__init__.py", line 64, in produce
    value = self._serializer.encode_record_with_schema(topic, value_schema, value)
  File "/usr/local/lib/python3.5/site-packages/confluent_kafka/avro/serializer/message_serializer.py", line 98, in encode_record_with_schema
    schema_id = self.registry_client.register(subject, schema)
  File "/usr/local/lib/python3.5/site-packages/confluent_kafka/avro/cached_schema_registry_client.py", line 133, in register
    raise ClientError("Incompatible Avro schema:" + str(code))
confluent_kafka.avro.error.ClientError: Incompatible Avro schema:409
root@00a12efb25bf:/tmp# exit
exit

for schema refer schema.py
